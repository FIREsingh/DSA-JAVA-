class Solution {
    public boolean isSumExist(int[] nums,int index,int sum){
       boolean[][] dp = new boolean[index+1][sum+1];

       for(int i = 0; i <= index; i++){
           dp[i][0] = true;
       }

         for(int i = 1; i <= index; i++){
             for(int j = 1; j <= sum; j++){
                 boolean pick = false;
                 if(nums[i-1] <= j){
                     pick = dp[i-1][j- nums[i-1]];
                 }
                 boolean notPick = dp[i-1][j];
                 dp[i][j] = pick || notPick;
             }
         }
         return dp[index][sum];
    }

    public boolean canPartition(int[] nums) {
        int totalSum = 0;
        int index = nums.length;
        for(int i = 0; i < index; i++){
            totalSum += nums[i];
        }
        if(totalSum % 2 != 0){
            return false;
        }
        int target = totalSum/2;

        return isSumExist(nums,index,target);
    }
}
