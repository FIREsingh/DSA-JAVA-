class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        int[][] dp = new int[n][n];
        int maxLength = 0;
        String ans = ""+s.charAt(0);

        //base
        for(int i = 0; i < n; i++){
            dp[i][i] = 1;
        }
        for(int diff = 1; diff<n ; diff++){
            for(int i = 0,j = i+diff; j < n; i++,j++){
                if(diff == 1){
                    if(s.charAt(i) == s.charAt(j)){
                        dp[i][j] = 2; 
                    }else{
                        dp[i][j] = 0; 
                    }
                }else{
                    if(s.charAt(i) == s.charAt(j) && dp[i+1][j-1] != 0){
                        dp[i][j] = 2 + dp[i+1][j-1];
                    }
                }
                if(dp[i][j] != 0){
                    if(j-i+1 > maxLength){
                        maxLength = j-i+1;
                        ans = s.substring(i,i+maxLength);
                    }
                }
            }
        }
        return ans;
    }
}
