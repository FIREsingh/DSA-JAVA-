class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int ind1 = text1.length();
        int ind2 = text2.length();

        int[][] dp = new int[ind1+1][ind2+1];

        for(int[] x : dp){
            Arrays.fill(x,-1);
        }
        return helper(text1, text2,ind1,ind2,dp);
    }

    public static int helper(String text1,String  text2, int ind1, int ind2, int[][] dp){
        if(dp[ind1][ind2] != -1){
            return dp[ind1][ind2];
        }
        if(ind1 == 0 || ind2 == 0){
            return 0;
        }
        if(text1.charAt(ind1-1) == text2.charAt(ind2-1)){
            return dp[ind1][ind2] = 1 + helper(text1, text2,ind1-1,ind2-1,dp);
        }
        return dp[ind1][ind2] = Math.max(helper(text1,text2,ind1-1,ind2,dp), helper(text1,text2,ind1,ind2-1,dp));
    }
}
