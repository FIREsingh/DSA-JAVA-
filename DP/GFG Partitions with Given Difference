class Solution{
    public int countPartitions(int n, int d, int arr[]){
        int mod = 1000000007;
        
        int tSum = 0;
        for(int i = 0; i < arr.length; i++){
            tSum += arr[i];
        }
        if((tSum + d)%2 != 0) return 0;
        int sum = (tSum + d)/2;
        
        int dp[][] = new int[n+1][sum+1];
        
        for(int i = 0; i <= n; i++){
            dp[i][0] = 1;
        }
        
        
        for(int i = 1; i <= n; i++){
            for(int j = 0; j <= sum; j++){
                
                int notPick = dp[i-1][j];
            
                int pick = 0;
                if(arr[i-1] <= j){
                    pick = dp[i-1][j-arr[i-1]] % mod;
                }
                dp[i][j] = (pick + notPick) % mod;
            }
        }
        return dp[n][sum]% mod;
    }
}
