class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;

        int[][] dp = new int[m][n];

        for(int[] x : dp){
            Arrays.fill(x,-1);
        }
        return helper(m-1,n-1,grid,dp);
    }
    public int helper(int m, int n, int[][] grid, int[][] dp) {
        if(m == 0 && n == 0){
            return grid[0][0];
        }
        if(m < 0 || n < 0){
            return 1000000000;
        }
        if(dp[m][n] != -1){
            return dp[m][n];
        }
        int up = grid[m][n] + helper(m-1,n,grid,dp);
        int left = grid[m][n] + helper(m,n-1,grid,dp);

        return dp[m][n] = Math.min(up,left);
    }
}
