class Solution {
    public int longestPalindromeSubseq(String s) {
        StringBuilder str = new StringBuilder(s);
        String reverseS = str.reverse().toString();
        
        int n = s.length();
        int[][] dp = new int[n+1][n+1];

        //left column and top row
        for(int i = 0; i <= n; i++){
            dp[i][0] = 0;
            dp[0][i] = 0;
        }
        //other
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= n; j++){
                if(s.charAt(i-1) == reverseS.charAt(j-1)){
                    dp[i][j] = 1 + dp[i-1][j-1];
                }else{
                    dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[n][n];
    }
}
