class Solution { 
    static int knapSack(int W, int wt[], int val[], int n) {
        int dp[][] = new int[n+1][W+1];
        
        //top row
        for(int i = 0; i <= W; i++){
            dp[0][i] = 0;
        }
        
        //left column
        for(int i = 0; i <= n; i++){
            dp[i][0] = 0;
        }
        
        //other part of dp array.
        for(int i = 1; i <= n; i++){
            for(int j = 1; j <= W; j++){
                int notPick = dp[i-1][j];
                int pick = Integer.MIN_VALUE;
                if(wt[i-1] <= j){
                    pick = val[i-1] + dp[i-1][j - wt[i-1]];
                }
                dp[i][j] = Math.max(pick, notPick);
            }
        }
        return dp [n][W];
    }
}
