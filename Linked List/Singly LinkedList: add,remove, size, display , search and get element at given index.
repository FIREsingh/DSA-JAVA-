class SLL {
    Node head;
    Node tail;
    private int size;
    SLL(){
        this.size = 0;
    }

    //create a Node class;
    class Node {
        int value;
        Node next;

        //constructor.
        public Node(int value) {
            this.value = value;
            this.next = null;
            size++;
        }
    }
    //Insert in the first position.
    public void insertFirst(int value){
        Node newNode = new Node(value);
        if(head == null){
            head = newNode;
            return;
        }
        newNode.next = head;
        head = newNode;
    }

    //Insert in the last position;
    public void insertLast(int value){
        Node newNode = new Node(value);
        if(head == null){
            head = newNode;
            return;
        }
        //Now we have to search for tail for that..
        Node tail = head;
        while(tail.next != null){
            tail = tail.next;
        }
        tail.next = newNode;
        tail = newNode;
    }

    //add element in given index.
    public void add(int value, int index){
        Node node = new Node(value);
        Node temp = head;
        int i = 0;
        while(i < index-1){
            temp = temp.next;
            i++;
        }
        node.next = temp.next;
        temp.next = node;
    }

    //To delete first position.
    public void deleteFirst(){
        if(head == null){
            System.out.println("list is empty");
            return;
        }
        head = head.next;
        size--;
    }

    //To delete the last position.
    public void deleteLast(){
        Node temp = head.next;
        tail = head;
        if(head == null){
            System.out.println("List is empty");
        }
        while(temp.next != null){
            temp = temp.next;
            tail = tail.next;
        }
        tail.next = null;
        size--;
    }

    //To remove an element at given Index;
    public void remove(int index){
        Node temp1 = head.next;
        Node temp = temp1.next;
        Node pre = head;
        int i = 0;
        if(index == 0){
            deleteFirst();
        }
        while (i<index-1){
            temp = temp.next;
            pre = pre.next;
            i++;
        }
        pre.next = temp;
        size--;
    }

    //To display;
    public void display(){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.value + "->");
            temp = temp.next;
        }
        System.out.println("End");
    }

    //getter method to get the size.
    public int getSize(){
        return size;
    }
    //Searching
    public int find(int value){
        Node temp = head;
        int i = 0;
        while (temp != null){
            if(temp.value == value){
                return i;
            }
            temp = temp.next;
            i++;
        }
        return -1;
    }
    
    //Element at given Index.
    public int get(int index) {
        Node temp = head;
        int i = 0;
        while (temp != null) {
            if (i == index) {
                return temp.value;
            }
            i++;
            temp = temp.next;
        }
        return -1;
    }
}
    //Main Method.
    class Test {
        public static void main(String[] args) {
            SLL list = new SLL();

            list.insertFirst(3);
            list.insertFirst(5);
            list.insertFirst(6);
            list.display();
            System.out.println("Size of linked list is : "+list.getSize());
            System.out.println("....................................... ");


            list.insertLast(22);
            list.insertLast(33);
            list.insertLast(44);
            list.display();
            System.out.println("Size of linked list is : "+list.getSize());
            System.out.println("....................................... ");

            list.deleteFirst();
            list.display();
            System.out.println("Size of linked list is : "+list.getSize());
            System.out.println("....................................... ");

            list.deleteLast();
            list.display();
            System.out.println("Size of linked list is : "+list.getSize());
            System.out.println("....................................... ");

            list.add(121,2);
            list.display();
            System.out.println("Size of linked list is : "+list.getSize());
            System.out.println("....................................... ");

            list.remove(1);
            list.display();
            System.out.println("Size of linked list is : "+list.getSize());
            System.out.println("....................................... ");

            System.out.println("Index of number is : "+list.find(22));
            System.out.println("value at index 1 is : "+ list.get(1));
        }
    }
