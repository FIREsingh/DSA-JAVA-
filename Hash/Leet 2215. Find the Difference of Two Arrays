class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        Map <Integer, Integer> map1 = new HashMap<>();
        Map <Integer, Integer> map2 = new HashMap<>();

        List<List<Integer>> ans = new ArrayList<>();
        List <Integer> list1 = new ArrayList<>();
        List <Integer> list2 = new ArrayList<>();


        int count1 = 0; 
        int count2 = 0;

        for(int i = 0; i<nums1.length; i++){
            if(map1.containsKey(nums1[i])){
                map1.put(nums1[i], map1.get(nums1[i]+1));
            }else{
                map1.put(nums1[i],1);
            }
        }
        for(int i = 0; i<nums2.length; i++){
            if(map2.containsKey(nums2[i])){
                map2.put(nums2[i], map2.get(nums2[i]+1));
            }else{
                map2.put(nums2[i],1);
            }
        }

        for(int i = 0; i < nums1.length; i++){
            if(!map2.containsKey(nums1[i])){
                if(!list1.contains(nums1[i])){
                    list1.add(nums1[i]);
                }
            }
        }
        for(int i = 0; i < nums2.length; i++){
            if(!map1.containsKey(nums2[i])){
                if(!list2.contains(nums2[i])){
                    list2.add(nums2[i]);
                }
            }
        }

        ans.add(list1);
        ans.add(list2);

        return ans;
    }
}
